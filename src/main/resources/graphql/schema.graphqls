scalar LocalDateTime

type Query {
    polls: [Poll]
    userPolls: [Poll]

    pollAnswers(pollId: ID!): [PollAnswer]
}

type Mutation {
    login(data: UserLoginInput!): Token
    register(data: UserRegisterInput!): Token
    logout: Boolean
    refresh: Token

    createPoll(poll: PollInput!): Poll
    updatePoll(pollId: ID!, poll: PollInput!): Poll
    deletePoll(pollId: ID!): Boolean

    createVote(pollAnswerId: ID!): Vote
    deleteVote(voteId: ID!): Boolean

    createPollAnswer(pollId: ID!, pollAnswer: PollAnswerInput!): PollAnswer
    updatePollAnswer(pollAnswerId: ID!, pollAnswer: PollAnswerInput!): PollAnswer
    deletePollAnswer(pollAnswerId: ID!): Boolean

    createUserGroup(userGroup: UserGroupInput!): UserGroup
    updateUserGroup(userGroupId: ID!, userGroup: UserGroupInput!): UserGroup
    removeUserFromUserGroup(userId: ID!): UserGroup
    addUserToUserGroup(userId: ID!): UserGroup
}

#----------------------------#
# Inputs
#----------------------------#
input PollInput {
    question: String!
    closesAt: LocalDateTime
    isPublic: Boolean!
}

input PollAnswerInput {
    answer: String!
}

input UserLoginInput {
    email: String!
    password: String!
}

input UserRegisterInput {
    firstName: String!
    lastName: String!
    email: String!
    password: String!
}

input UserGroupInput {
    name: String!
    userIds: [ID!]
}
# end of inputs

#----------------------------#
# Special types
#----------------------------#
type Token {
    accessToken: String!
    refreshToken: String!
}
# end of special types

#----------------------------#
# Types
#----------------------------#
type Poll {
    id: ID!
    question: String!
    createdAt: LocalDateTime!
    closesAt: LocalDateTime!
    isPublic: Boolean!
    creator: User
    pollAnswers: [PollAnswer]
    votes: [Vote]
}

type PollAnswer {
    id: ID!
    answer: String!
}

type Role {
    id: ID!
    name: String!
}

type User {
    id: ID!
    firstName: String!
    lastName: String!
    role: Role
}

type UserGroup {
    id: ID!
    name: String
    owner: User
    users: [User]
}

type Vote {
    id: ID!
    castedAt: LocalDateTime!
    poll: Poll
    answer: PollAnswer
}
# end of types
