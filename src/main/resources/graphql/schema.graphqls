scalar LocalDateTime

type Query {
    polls(page_size: Int = 10, page_number: Int = 0): [Poll]
    user_polls(page_size: Int = 10, page_number: Int = 0): [Poll]

    poll(poll_id: ID!): Poll
    poll_by_token(poll_id: ID!, vote_token: String!): Poll
    poll_answer(id: ID!): [PollAnswer]
    allPolls(page_size: Int = 10, page_number: Int = 0): [Poll]

    user_group(id: ID!): UserGroup
    users: [User]
    users_page(page_size: Int = 10, page_number: Int = 0): [User]
}

type Mutation {
    auth_login(email: String!, password: String!): Token
    auth_register(object: user_register_input!): Token
    auth_logout: Boolean
    auth_refresh(refresh_token: String!): Token
    auth_reset_password(new_password: String!, reset_token: String!): Boolean
    auth_send_reset_password_link(email: String!): Boolean

    edit_user(id: ID!, data: user_input!): Boolean
    delete_user(id: ID!): Boolean

    insert_poll(poll: poll_input!): Poll
    update_poll(poll_id: ID!, object: poll_input!): Poll
    delete_poll(poll_id: ID!): Boolean
    close_poll(poll_id: ID!): Boolean

    insert_vote(poll_answer_id: ID!): Vote
    insert_vote_by_token(poll_answer_id: ID!, vote_token: String!): Vote
    delete_vote(id: ID!): Boolean

    insert_poll_answer(poll_id: ID!, object: poll_answer_input!): PollAnswer
    update_poll_answer(id: ID!, object: poll_answer_input!): PollAnswer
    delete_poll_answer(id: ID!): Boolean

    insert_user_group(object: user_group_input!): UserGroup
    update_user_group(id: ID!, object: user_group_input!): UserGroup
    remove_user_from_user_group(user_id: ID!, user_group_id: ID!): UserGroup
    insert_user_to_user_group(user_id: ID!, user_group_id: ID!): UserGroup
}

#----------------------------#
# Inputs
#----------------------------#
input poll_input {
    question: String!
    closesAt: LocalDateTime
    nonSystemUsersEmails: [String]
    systemUsers: [String]
    isPublic: Boolean!
    answers: [poll_answer_input]!
}

input poll_answer_input {
    id: ID
    answer: String!
}

input user_register_input {
    firstName: String!
    lastName: String!
    email: String!
    password: String!
}

input user_group_input {
    name: String!
    user_ids: [ID!]
}

input user_input {
    firstName: String!
    lastName: String!
    email: String!
}
# end of inputs

#----------------------------#
# Types
#----------------------------#
type Token {
    accessToken: String!
    refreshToken: String!
}

type Poll {
    id: ID!
    question: String!
    createdAt: LocalDateTime!
    closesAt: LocalDateTime!
    isPublic: Boolean!
    creator: User
    answers: [PollAnswer]
    systemUsers: [User]
    votes: [Vote]
    votePlaced: Boolean!
}

type PollAnswer {
    id: ID!
    answer: String!
}

type Role {
    id: ID!
    name: String!
}

type User {
    id: ID!
    firstName: String!
    lastName: String!
    email: String!
    role: Role
}

type UserGroup {
    id: ID!
    name: String
    owner: User
    users: [User]
}

type Vote {
    id: ID!
    castedAt: LocalDateTime!
    poll: Poll
    answer: PollAnswer
}
# end of types
